name: deploy-book

on:
  push:
    branches:
    - main
    paths:
    - 'jupyter-book/**'
    - 'pyproject.toml' # Also run if dependencies change
    - '.github/workflows/deploy-book.yml'

jobs:
  deploy-book:
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Use the official Python action to install the version specified in pyproject.toml
    - name: Set up Python from pyproject.toml
      uses: actions/setup-python@v5
      with:
        # This key tells the action to read the `requires-python` field
        # from your pyproject.toml file.
        python-version-file: 'pyproject.toml'

    # Use the official uv action to install uv and enable caching.
    # It will automatically find and use the Python version set up in the previous step.
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true

    # Use `uv sync` to install dependencies into the environment.
    - name: Install dependencies
      run: uv sync

    # (optional) Cache your executed notebooks between runs
    - name: Cache executed notebooks
      uses: actions/cache@v4
      with:
        path: jupyter-book/_build/.jupyter_cache
        key: jupyter-book-cache-${{ hashFiles('**/pyproject.toml') }}

    # Use `uv run` to execute the build command within the managed environment.
    - name: Build the book
      run: uv run jupyter-book build jupyter-book

    # Upload the book's HTML as an artifact
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: "jupyter-book/_build/html"

    # Deploy the book's HTML to GitHub Pages
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
